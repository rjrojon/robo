{"version":3,"sources":["components/Card.js","components/CardList.jsx","components/SearchBox.js","components/Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","username","className","alt","src","CardList","robots","map","robot","id","SearchBox","searchChange","onChange","placeholder","Scroll","require","default","props","style","maxHeight","children","App","onSearchChange","event","setState","searchfields","target","value","state","fetch","then","res","json","users","fillterRobots","this","filter","toLowerCase","includes","Loading","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAYeA,EAVF,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxB,OACI,sBAAKC,UAAU,qFAAf,UACI,qBAAKA,UAAU,SAASC,IAAI,OAAOC,IAAG,8BAAyBH,KAC/D,oBAAIC,UAAU,qCAAd,SAAoDH,IACpD,mBAAGG,UAAU,qBAAb,SAAmCF,QCMhCK,EAXE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,qBAAKJ,UAAU,iEAAf,SAEQI,EAAOC,KAAI,SAAAC,GAAK,OAAK,cAAC,EAAD,CAAqBT,KAAMS,EAAMT,KAAMC,MAAOQ,EAAMR,MAAOC,SAAUO,EAAMP,UAAhEO,EAAMC,UCDvCC,EANG,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAF,OACd,8BACI,uBAAOC,SAAUD,EAAcT,UAAU,8DAA8DW,YAAY,oBCQ5GC,GAVkBC,EAAQ,IAAjCC,QAEO,SAACC,GACZ,OACI,qBAAKf,UAAU,kCAAkCgB,MAAO,CAACC,UAAW,SAApE,SACKF,EAAMG,aCoDJC,G,wDA7Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,aAAcF,EAAMG,OAAOC,SAb7C,EAAKC,MAAQ,CACXtB,OAAQ,GACRmB,aAAc,IAJJ,E,gEAQQ,IAAD,OACnBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAClB,OAAQ2B,S,+BAOhC,IAAD,OACDC,EAAgBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAA5B,GAC7C,OAAOA,EAAMT,KAAKsC,cAAcC,SAAS,EAAKV,MAAMH,aAAaY,kBAG7DE,EAAU,WACd,OAAI,EAAKX,MAAMtB,OAAOkC,OAGb,GAFA,oBAAI/B,GAAG,OAAOP,UAAU,4BAAxB,yBAOZ,OACM,sBAAKA,UAAU,yFAAf,UACE,oBAAIO,GAAG,OAAOP,UAAU,6BAAxB,0BACA,cAAC,EAAD,CAAWS,aAAcwB,KAAKb,iBAC9B,cAACiB,EAAD,IACA,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjC,OAAQ4B,a,GAvCZO,cCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a14696e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name, email, username}) => {\r\n    return (\r\n        <div className=\"bg-indigo-500 w-60 mt-2 h-80 rounded-xl overflow-hidden flex flex-col items-center\">\r\n            <img className=\"w-full\" alt=\"user\" src={`http://robohash.org/${username}`} />\r\n            <h2 className=\"text-2xl font-bold text-white mt-2\">{name}</h2>\r\n            <p className=\"text-lg text-white\">{email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n    // console.log(robots);\r\n    return (\r\n        <div className=\"flex space-x-2 justify-center flex-wrap max-w-5xl my-0 mx-auto\">\r\n            {\r\n                robots.map(robot => (<Card key={robot.id} name={robot.name} email={robot.email} username={robot.username}/>))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList ","const SearchBox = ({searchChange}) => (\r\n    <div>\r\n        <input onChange={searchChange} className=\"text-center py-2 border-solid border-gray-600 border-4 px-1\" placeholder=\"Search Robot\"/>\r\n    </div>\r\n)\r\n\r\nexport default SearchBox","const { default: PreviousMap } = require(\"postcss/lib/previous-map\")\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className=\"overflow-y-scroll scrollBarHide\" style={{maxHeight: '600px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React, { Component } from 'react'\n\n\nimport CardList from './components/CardList'\nimport SearchBox from './components/SearchBox'\nimport Scroll from './components/Scroll'\n\n\nimport './App.css'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfields: ''\n    }\n  }\n\n  componentDidMount () {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({robots: users}));\n  }\n\n  onSearchChange = (event) => {\n      this.setState({ searchfields: event.target.value})\n  }\n\n  render() {\n    const fillterRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfields.toLowerCase())\n    })\n\n    const Loading = () => {\n      if(!this.state.robots.length) {\n        return <h1 id=\"saga\" className=\"text-xl p-3 text-blue-300\">Loading...</h1>\n      } else {\n        return ''\n      }\n  \n    }\n\n   return (\n         <div className=\"App min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-900 to-pink-900\">\n           <h1 id=\"saga\" className=\"text-6xl p-3 text-blue-300\">Robo Friends</h1>\n           <SearchBox searchChange={this.onSearchChange}/>\n           <Loading />\n           <Scroll>\n            <CardList robots={fillterRobots} />\n           </Scroll>\n         </div>\n       );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './assets/main.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}